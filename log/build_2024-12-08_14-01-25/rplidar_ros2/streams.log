[0.074s] Invoking command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake /home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2 -DCMAKE_INSTALL_PREFIX=/home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2
[0.361s] -- The C compiler identification is GNU 9.4.0
[0.629s] -- The CXX compiler identification is GNU 9.4.0
[0.661s] -- Check for working C compiler: /usr/bin/cc
[1.047s] -- Check for working C compiler: /usr/bin/cc -- works
[1.051s] -- Detecting C compiler ABI info
[1.443s] -- Detecting C compiler ABI info - done
[1.491s] -- Detecting C compile features
[1.494s] -- Detecting C compile features - done
[1.507s] -- Check for working CXX compiler: /usr/bin/c++
[1.911s] -- Check for working CXX compiler: /usr/bin/c++ -- works
[1.922s] -- Detecting CXX compiler ABI info
[2.402s] -- Detecting CXX compiler ABI info - done
[2.466s] -- Detecting CXX compile features
[2.469s] -- Detecting CXX compile features - done
[2.519s] -- Found ament_cmake: 1.1.6 (/opt/ros/galactic/share/ament_cmake/cmake)
[2.726s] -- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
[2.727s] -- Using PYTHON_EXECUTABLE: /usr/bin/python3
[3.553s] -- Found rclcpp: 9.2.2 (/opt/ros/galactic/share/rclcpp/cmake)
[4.175s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[4.302s] -- Found rosidl_adapter: 2.2.3 (/opt/ros/galactic/share/rosidl_adapter/cmake)
[5.036s] -- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "1.1.1f")  
[5.213s] -- Found FastRTPS: /opt/ros/galactic/include  
[5.882s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[6.421s] -- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
[6.482s] -- Found rmw_cyclonedds_cpp: 0.22.6 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
[6.620s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[6.623s] -- Looking for pthread.h
[7.044s] -- Looking for pthread.h - found
[7.046s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[7.495s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
[7.497s] -- Looking for pthread_create in pthreads
[7.849s] -- Looking for pthread_create in pthreads - not found
[7.850s] -- Looking for pthread_create in pthread
[8.251s] -- Looking for pthread_create in pthread - found
[8.262s] -- Found Threads: TRUE  
[9.276s] -- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
[9.868s] -- Found std_srvs: 2.2.4 (/opt/ros/galactic/share/std_srvs/cmake)
[10.256s] -- Configuring done
[10.334s] -- Generating done
[10.368s] -- Build files have been written to: /home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2
[10.413s] Invoked command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake /home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2 -DCMAKE_INSTALL_PREFIX=/home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2
[10.418s] Invoking command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake --build /home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2 -- -j4 -l4
[10.689s] [35m[1mScanning dependencies of target rplidar_scan_publisher[0m
[11.099s] [  8%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/src/rplidar_scan_publisher.cpp.o[0m
[21.649s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[21.650s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[21.650s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
[21.653s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[21.653s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[21.653s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[21.654s]       |                [01;35m[K^[m[K
[21.657s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[21.657s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
[21.658s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[21.658s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[21.659s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[21.659s]       |                    [01;35m[K^[m[K
[21.759s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kvoid RPLidarScanPublisher::init_param()[m[Kâ€™:
[21.760s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:67:47:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.760s]    67 |         this->declare_parameter("channel_type"[01;35m[K)[m[K;
[21.760s]       |                                               [01;35m[K^[m[K
[21.761s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.761s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.762s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.762s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.763s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.763s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.764s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.772s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:68:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.774s]    68 |         this->declare_parameter("tcp_ip"[01;35m[K)[m[K;
[21.775s]       |                                         [01;35m[K^[m[K
[21.776s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.776s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.777s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.777s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.778s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.778s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.787s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.787s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:69:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.788s]    69 |         this->declare_parameter("udp_ip"[01;35m[K)[m[K;
[21.788s]       |                                         [01;35m[K^[m[K
[21.789s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.789s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.789s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.790s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.790s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.791s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.791s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.792s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:70:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.792s]    70 |         this->declare_parameter("tcp_port"[01;35m[K)[m[K;
[21.792s]       |                                           [01;35m[K^[m[K
[21.793s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.793s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.794s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.794s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.811s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.812s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.812s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.813s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:71:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.813s]    71 |         this->declare_parameter("udp_port"[01;35m[K)[m[K;
[21.814s]       |                                           [01;35m[K^[m[K
[21.814s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.820s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.820s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.820s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.821s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.821s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.822s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.822s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:72:46:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.822s]    72 |         this->declare_parameter("serial_port"[01;35m[K)[m[K;
[21.823s]       |                                              [01;35m[K^[m[K
[21.823s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.824s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.824s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.841s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.842s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.842s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.843s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.843s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:73:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.843s]    73 |         this->declare_parameter("serial_baudrate"[01;35m[K)[m[K;
[21.844s]       |                                                  [01;35m[K^[m[K
[21.844s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.845s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.845s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.846s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.846s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.847s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.847s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.847s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:74:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.848s]    74 |         this->declare_parameter("frame_id"[01;35m[K)[m[K;
[21.848s]       |                                           [01;35m[K^[m[K
[21.849s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.849s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.849s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.850s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.871s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.871s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.872s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.872s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:75:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.873s]    75 |         this->declare_parameter("inverted"[01;35m[K)[m[K;
[21.873s]       |                                           [01;35m[K^[m[K
[21.874s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.874s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.874s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.875s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.875s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.876s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.876s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.877s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:76:51:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.877s]    76 |         this->declare_parameter("angle_compensate"[01;35m[K)[m[K;
[21.878s]       |                                                   [01;35m[K^[m[K
[21.879s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.879s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.880s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.880s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.881s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.881s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.882s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.882s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:77:44:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.899s]    77 |         this->declare_parameter("scan_mode"[01;35m[K)[m[K;
[21.900s]       |                                            [01;35m[K^[m[K
[21.900s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.900s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.901s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.901s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.901s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.902s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.902s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[21.902s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:78:49:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[21.903s]    78 |         this->declare_parameter("scan_frequency"[01;35m[K)[m[K;
[21.903s]       |                                                 [01;35m[K^[m[K
[21.904s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[21.904s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[21.905s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[21.905s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[21.905s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[21.906s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[21.906s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[26.652s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kbool RPLidarScanPublisher::checkRPLIDARHealth(sl::ILidarDriver*)[m[Kâ€™:
[26.652s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:150:5:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
[26.652s]   150 |     [01;35m[K}[m[K
[26.653s]       |     [01;35m[K^[m[K
[42.631s] [ 16%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/timer.cpp.o[0m
[44.655s] [ 25%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/hal/thread.cpp.o[0m
[46.180s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[46.181s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[46.182s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[46.183s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[46.184s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[46.184s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[46.185s]       |                [01;35m[K^[m[K
[46.188s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[46.189s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[46.190s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[46.191s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[46.191s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[46.192s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[46.193s]       |                    [01;35m[K^[m[K
[46.465s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:43[m[K:
[46.466s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In static member function â€˜[01m[Kstatic rp::hal::Thread rp::hal::Thread::create(thread_proc_t, void*)[m[Kâ€™:
[46.468s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:48:77:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
[46.468s]    48 |     pthread_create((pthread_t *)&newborn._handle, NULL, (void * (*)(void *))[01;35m[Kproc[m[K, data);
[46.469s]       |                                                                             [01;35m[K^~~~[m[K
[46.472s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In member function â€˜[01m[Ku_result rp::hal::Thread::join(long unsigned int)[m[Kâ€™:
[46.472s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:129:37:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.472s]   129 | u_result Thread::join([01;35m[Kunsigned long timeout[m[K)
[46.473s]       |                       [01;35m[K~~~~~~~~~~~~~~^~~~~~~[m[K
[46.956s] [ 33%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/rplidar_driver.cpp.o[0m
[48.528s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[48.528s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[48.528s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[48.529s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[48.529s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[48.530s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[48.530s]       |                [01;35m[K^[m[K
[48.532s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[48.532s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[48.533s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[48.533s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[48.533s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[48.534s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[48.534s]       |                    [01;35m[K^[m[K
[49.232s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::connect(const char*, _u32, _u32)[m[Kâ€™:
[49.232s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:67:77:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[49.233s]    67 |     u_result RPlidarDriver::connect(const char *path, _u32 portOrBaud, [01;35m[K_u32 flag[m[K)
[49.233s]       |                                                                        [01;35m[K~~~~~^~~~[m[K
[49.234s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::reset(_u32)[m[Kâ€™:
[49.234s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:101:40:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[49.235s]   101 |     u_result RPlidarDriver::reset([01;35m[K_u32 timeout[m[K)
[49.235s]       |                                   [01;35m[K~~~~~^~~~~~~[m[K
[49.236s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::getScanDataWithInterval(rplidar_response_measurement_node_t*, size_t&)[m[Kâ€™:
[49.237s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:91:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodebuffer[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[49.237s]   175 |     u_result RPlidarDriver::getScanDataWithInterval([01;35m[Krplidar_response_measurement_node_t * nodebuffer[m[K, size_t & count)
[49.238s]       |                                                     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[49.239s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:112:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[49.239s]   175 |     u_result RPlidarDriver::getScanDataWithInterval(rplidar_response_measurement_node_t * nodebuffer, [01;35m[Ksize_t & count[m[K)
[49.239s]       |                                                                                                       [01;35m[K~~~~~~~~~^~~~~[m[K
[49.935s] [ 41%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_crc.cpp.o[0m
[49.989s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[49.989s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
[49.990s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[49.990s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[49.990s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[49.991s]       |                [01;35m[K^[m[K
[49.995s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
[49.996s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[49.996s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[49.997s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[49.997s]       |                    [01;35m[K^[m[K
[49.997s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:[m[K In function â€˜[01m[Ksl_u32 sl::crc32::cal(sl_u32, void*, sl_u16)[m[Kâ€™:
[49.998s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:77:29:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K-[m[Kâ€™ in operand of â€˜[01m[K&[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
[49.998s]    77 |         sl_u8 leftBytes = [01;35m[K4 - len[m[K & 0x3;
[49.999s]       |                           [01;35m[K~~^~~~~[m[K
[50.261s] [ 50%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_lidar_driver.cpp.o[0m
[51.919s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[51.919s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[51.920s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[51.922s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[51.923s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[51.924s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[51.925s]       |                [01;35m[K^[m[K
[51.928s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[51.929s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[51.929s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[51.930s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[51.930s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[51.934s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[51.935s]       |                    [01;35m[K^[m[K
[52.680s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::reset(sl_u32)[m[Kâ€™:
[52.680s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:273:32:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.681s]   273 |         sl_result reset([01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
[52.681s]       |                         [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.690s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getAllSupportedScanModes(std::vector<sl::LidarScanMode>&, sl_u32)[m[Kâ€™:
[52.691s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:286:89:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.691s]   286 |         sl_result getAllSupportedScanModes(std::vector<LidarScanMode>& outModes, [01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
[52.692s]       |                                                                                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.695s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::startScan(bool, bool, sl_u32, sl::LidarScanMode*)[m[Kâ€™:
[52.696s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:347:69:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Koptions[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.696s]   347 |         sl_result startScan(bool force, bool useTypicalScan, [01;35m[Ksl_u32 options = 0[m[K, LidarScanMode* outUsedScanMode = nullptr)
[52.696s]       |                                                              [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[52.705s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::stop(sl_u32)[m[Kâ€™:
[52.706s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:534:31:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.709s]   534 |         sl_result stop([01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[52.709s]       |                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.710s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getDeviceInfo(sl_lidar_response_device_info_t&, sl_u32)[m[Kâ€™:
[52.710s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:579:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.711s]   579 |         sl_result getDeviceInfo(sl_lidar_response_device_info_t& info, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[52.711s]       |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.712s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::checkMotorCtrlSupport(sl::MotorCtrlSupport&, sl_u32)[m[Kâ€™:
[52.712s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:592:76:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.713s]   592 |         sl_result checkMotorCtrlSupport(MotorCtrlSupport & support, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[52.714s]       |                                                                     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.714s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getFrequency(const sl::LidarScanMode&, const sl_lidar_response_measurement_node_hq_t*, size_t, float&)[m[Kâ€™:
[52.715s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:627:110:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodes[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.716s]   627 |         sl_result getFrequency(const LidarScanMode& scanMode, [01;35m[Kconst sl_lidar_response_measurement_node_hq_t* nodes[m[K, size_t count, float& frequency)
[52.716s]       |                                                               [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[52.716s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getHealth(sl_lidar_response_device_health_t&, sl_u32)[m[Kâ€™:
[52.717s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:640:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.717s]   640 |         sl_result getHealth(sl_lidar_response_device_health_t& health, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[52.717s]       |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[52.719s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getMotorInfo(sl::LidarMotorInfo&, sl_u32)[m[Kâ€™:
[52.721s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:730:66:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[52.722s]   730 |         sl_result getMotorInfo(LidarMotorInfo &motorInfo, [01;35m[Ksl_u32 timeoutInMs[m[K)
[52.722s]       |                                                           [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[52.740s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Ksl_result sl::SlamtecLidarDriver::_sendCommand(sl_u16, const void*, size_t)[m[Kâ€™:
[52.740s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1089:35:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<unsigned char>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
[52.741s]  1089 |             for (int pos = 0; [01;35m[Kpos < cmd_packet.size()[m[K; pos++) {
[52.741s]       |                               [01;35m[K~~~~^~~~~~~~~~~~~~~~~~~[m[K
[52.742s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1058:19:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpkt_header[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
[52.743s]  1058 |             sl_u8 [01;35m[Kpkt_header[m[K[10];
[52.743s]       |                   [01;35m[K^~~~~~~~~~[m[K
[52.752s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_ultraCapsuleToNormal(const sl_lidar_response_ultra_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[52.752s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1370:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[52.753s]  1370 |                     if (([01;35m[Kdist_predict1 == 0xFFFFFE00[m[K) || (dist_predict1 == 0x1FF)) {
[52.753s]       |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[52.754s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1379:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[52.754s]  1379 |                     if (([01;35m[Kdist_predict2 == 0xFFFFFE00[m[K) || (dist_predict2 == 0x1FF)) {
[52.754s]       |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[52.762s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_dense_capsuleToNormal(const sl_lidar_response_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[52.763s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1577:116:[m[K [01;35m[Kwarning: [m[Ktype qualifiers ignored on cast result type [[01;35m[K-Wignored-qualifiers[m[K]
[52.763s]  1577 |                     const int dist = static_cast<const int>(_cached_previous_dense_capsuledata.cabins[pos].distance[01;35m[K)[m[K;
[52.764s]       |                                                                                                                    [01;35m[K^[m[K
[53.279s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K At global scope:
[53.280s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:72:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::convert(const sl_lidar_response_measurement_node_hq_t&, sl_lidar_response_measurement_node_t&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
[53.280s]    72 |     static void [01;35m[Kconvert[m[K(const sl_lidar_response_measurement_node_hq_t& from, sl_lidar_response_measurement_node_t& to)
[53.280s]       |                 [01;35m[K^~~~~~~[m[K
[53.281s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:59:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::printDeprecationWarn(const char*, const char*)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
[53.281s]    59 |     static void [01;35m[KprintDeprecationWarn[m[K(const char* fn, const char* replacement)
[53.282s]       |                 [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[64.312s] [ 58%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_serial_channel.cpp.o[0m
[64.355s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[64.356s]    33 | #pragma [01;35m[Konce[m[K
[64.356s]       |         [01;35m[K^~~~[m[K
[65.459s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[65.460s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[65.462s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[65.464s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[65.466s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[65.467s]       |                [01;35m[K^[m[K
[65.471s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[65.473s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[65.474s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[65.476s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[65.477s]       |                    [01;35m[K^[m[K
[65.879s] [ 66%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_tcp_channel.cpp.o[0m
[65.919s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[65.920s]    33 | #pragma [01;35m[Konce[m[K
[65.921s]       |         [01;35m[K^~~~[m[K
[66.977s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[66.979s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[66.980s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[66.982s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[66.983s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[66.985s]       |                [01;35m[K^[m[K
[66.991s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[66.992s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[66.994s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[66.995s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[66.997s]       |                    [01;35m[K^[m[K
[67.042s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::TcpChannel::setStatus(_u32)[m[Kâ€™:
[67.043s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:95:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[67.044s]    95 |         void setStatus([01;35m[K_u32 flag[m[K){}
[67.044s]       |                        [01;35m[K~~~~~^~~~[m[K
[67.522s] [ 75%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_udp_channel.cpp.o[0m
[67.571s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[67.572s]    33 | #pragma [01;35m[Konce[m[K
[67.574s]       |         [01;35m[K^~~~[m[K
[68.748s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[68.749s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[68.749s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[68.750s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[68.750s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[68.750s]       |                [01;35m[K^[m[K
[68.753s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[68.755s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[68.755s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[68.756s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[68.756s]       |                    [01;35m[K^[m[K
[68.780s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::UdpChannel::setStatus(_u32)[m[Kâ€™:
[68.780s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:103:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[68.781s]   103 |         void setStatus([01;35m[K_u32 flag[m[K){}
[68.781s]       |                        [01;35m[K~~~~~^~~~[m[K
[69.231s] [ 83%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_socket.cpp.o[0m
[70.910s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[70.911s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[70.912s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[70.913s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[70.913s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[70.914s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[70.915s]       |                [01;35m[K^[m[K
[70.918s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[70.919s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[70.919s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[70.920s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[70.921s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[70.922s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[70.922s]       |                    [01;35m[K^[m[K
[71.198s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::net::SocketAddress::getAddressAsString(char*, size_t) const[m[Kâ€™:
[71.199s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:170:17:[m[K [01;35m[Kwarning: [m[Kordered comparison of pointer with integer zero [[01;35m[K-Wextra[m[K]
[71.199s]   170 |     return ans<=[01;35m[K0[m[K?RESULT_OPERATION_FAIL:RESULT_OK;
[71.200s]       |                 [01;35m[K^[m[K
[71.221s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::StreamSocketImpl::send(const void*, size_t)[m[Kâ€™:
[71.222s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:438:17:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[71.222s]   438 |         if ([01;35m[Kans == (int)len[m[K) {
[71.223s]       |             [01;35m[K~~~~^~~~~~~~~~~[m[K
[71.615s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::DGramSocketImpl::sendTo(const rp::net::SocketAddress&, const void*, size_t)[m[Kâ€™:
[71.615s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:722:47:[m[K [01;35m[Kwarning: [m[Knonnull argument â€˜[01m[Ktarget[m[Kâ€™ compared to NULL [[01;35m[K-Wnonnull-compare[m[K]
[71.616s]   722 |         const struct sockaddr* addr = &target [01;35m[K?[m[K reinterpret_cast<const struct sockaddr*>(target.getPlatformData()) : NULL;
[71.616s]       |                                               [01;35m[K^[m[K
[72.836s] [ 91%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_serial.cpp.o[0m
[75.196s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kbool rp::arch::net::raw_serial::open(const char*, uint32_t, uint32_t)[m[Kâ€™:
[75.197s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:97:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[75.197s]    97 | bool raw_serial::open(const char * portname, uint32_t baudrate, [01;35m[Kuint32_t flags[m[K)
[75.198s]       |                                                                 [01;35m[K~~~~~~~~~^~~~~[m[K
[75.201s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::flush(_u32)[m[Kâ€™:
[75.202s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:281:30:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[75.202s]   281 | void raw_serial::flush( [01;35m[K_u32 flags[m[K)
[75.203s]       |                         [01;35m[K~~~~~^~~~~[m[K
[75.203s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforsent(_u32, size_t*)[m[Kâ€™:
[75.204s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:286:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[75.204s]   286 | int raw_serial::waitforsent([01;35m[K_u32 timeout[m[K, size_t * returned_size)
[75.205s]       |                             [01;35m[K~~~~~^~~~~~~[m[K
[75.205s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforrecv(_u32, size_t*)[m[Kâ€™:
[75.206s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:292:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[75.206s]   292 | int raw_serial::waitforrecv([01;35m[K_u32 timeout[m[K, size_t * returned_size)
[75.207s]       |                             [01;35m[K~~~~~^~~~~~~[m[K
[75.558s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::cancelOperation()[m[Kâ€™:
[75.560s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:428:12:[m[K [01;35m[Kwarning: [m[Kignoring return value of â€˜[01m[Kssize_t write(int, const void*, size_t)[m[Kâ€™, declared with attribute warn_unused_result [[01;35m[K-Wunused-result[m[K]
[75.560s]   428 |     [01;35m[K::write(_selfpipe[1], "x", 1)[m[K;
[75.561s]       |     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[75.634s] In file included from [01m[K/usr/include/string.h:495[m[K,
[75.634s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/arch_linux.h:40[m[K,
[75.635s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:35[m[K:
[75.635s] In function â€˜[01m[Kchar* strncpy(char*, const char*, size_t)[m[Kâ€™,
[75.636s]     inlined from â€˜[01m[Kvirtual bool rp::arch::net::raw_serial::bind(const char*, uint32_t, uint32_t)[m[Kâ€™ at [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:91:12[m[K:
[75.636s] [01m[K/usr/include/aarch64-linux-gnu/bits/string_fortified.h:106:34:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kchar* __builtin_strncpy(char*, const char*, long unsigned int)[m[Kâ€™ specified bound 200 equals destination size [[01;35m[K-Wstringop-truncation[m[K]
[75.636s]   106 |   return [01;35m[K__builtin___strncpy_chk (__dest, __src, __len, __bos (__dest))[m[K;
[75.637s]       |          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[76.132s] [100%] [32m[1mLinking CXX executable rplidar_scan_publisher[0m
[76.855s] [100%] Built target rplidar_scan_publisher
[76.928s] Invoked command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake --build /home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2 -- -j4 -l4
[76.930s] Invoking command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake --install /home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2
[77.046s] -- Install configuration: "Release"
[77.047s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch
[77.048s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_launch.py
[77.051s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_a3_launch.py
[77.053s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_tcp_launch.py
[77.054s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_launch.py
[77.055s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_tcp_launch.py
[77.057s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s2_launch.py
[77.059s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_a3_launch.py
[77.061s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s2_launch.py
[77.062s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_launch.py
[77.064s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_launch.py
[77.065s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/rviz
[77.067s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/rviz/rplidar_ros2.rviz
[77.067s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher
[77.069s] -- Set runtime path of "/home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher" to ""
[77.070s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/ament_index/resource_index/package_run_dependencies/rplidar_ros2
[77.072s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/ament_index/resource_index/parent_prefix_path/rplidar_ros2
[77.074s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.sh
[77.077s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.dsv
[77.080s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/environment/path.sh
[77.087s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/environment/path.dsv
[77.087s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/local_setup.bash
[77.088s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/local_setup.sh
[77.088s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/local_setup.zsh
[77.088s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/local_setup.dsv
[77.089s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/package.dsv
[77.093s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/ament_index/resource_index/packages/rplidar_ros2
[77.097s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_dependencies-extras.cmake
[77.098s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_include_directories-extras.cmake
[77.099s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config.cmake
[77.099s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config-version.cmake
[77.101s] -- Installing: /home/wheeltec/wheeltec_ros2/src/install/rplidar_ros2/share/rplidar_ros2/package.xml
[77.111s] Invoked command in '/home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/wheeltec/wheeltec_ros2/install/simple_follower_ros2:/home/wheeltec/wheeltec_ros2/install/wheeltec_robot_keyboard:/home/wheeltec/wheeltec_ros2/install/tf2_tools:/home/wheeltec/wheeltec_ros2/install/teleop_twist_keyboard:/home/wheeltec/wheeltec_ros2/install/nav2_simple_commander:/home/wheeltec/wheeltec_ros2/install/nav2_gazebo_spawner:/home/wheeltec/wheeltec_ros2/install/ldlidar_sl_ros2:/home/wheeltec/wheeltec_ros2/install/keyboard_control_emer:/opt/ros/galactic /usr/bin/cmake --install /home/wheeltec/wheeltec_ros2/src/build/rplidar_ros2
